name: CI

on:
  push:
    branches: [ 'main', 'develop' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: build-and-test-${{ matrix.os }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Test
      run: dotnet test --logger trx --logger html --results-directory coverage --collect "XPlat Code Coverage"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: '!cancelled()'
      with:
        name: coverage
        path: coverage

    - name: Code coverage summary report
      uses: irongut/CodeCoverageSummary@v1.3.0
      if: '!cancelled()'
      with:
        filename: 'coverage/*/coverage.cobertura.xml'
        badge: true
        format: 'markdown'
        output: 'both'
        fail_below_min: true
        thresholds: '0 80'

    - name: Write to Job Summary
      run: |
        cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY |
        echo COVERAGE=$(cat code-coverage-results.md | awk -F '|' '{print $2}' | sed -n 's/.*\*\*\([0-9]*\)%.*/\1/p') >> $GITHUB_ENV
      if: '!cancelled()'

    - name: Create Awesome Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      if: '!cancelled()'
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: coverage-${{ github.ref_name }}.json
        label: Coverage
        message: ${{ env.COVERAGE }}%
        valColorRange: ${{ env.COVERAGE }}
        maxColorRange: 80
        minColorRange: 3
        color: orange

  build-publish-and-deploy-image:
    runs-on: ubuntu-latest
    needs: test

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to GitHub Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        push: true
        context: .
        file: FoulBot.App/Dockerfile
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Deploy to DO
      uses: appleboy/ssh-action@v1.0.3
      if: github.ref == 'refs/heads/main'
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        passphrase: ${{ secrets.PASSWORD }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          docker pull ghcr.io/ewancoder/foulbot:main
          docker stop foulbot || true
          docker rm foulbot || true
          docker run -d \
            --name foulbot \
            --restart unless-stopped \
            --memory 400m \
            --env-file /data/foulbot/secrets.env \
            -v /data/foulbot/key.json:/app/key.json \
            -v /data/foulbot/chats:/app/chats \
            -v /data/foulbot/allowed_chats:/app/allowed_chats \
            -v /data/foulbot/logs:/app/logs \
            -v /data/foulbot/reminders:/app/reminders \
            ghcr.io/ewancoder/foulbot:main
